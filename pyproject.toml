[project]
name = "cumulus-etl"
requires-python = ">= 3.10"
# These dependencies are mostly pinned to be under the next major version.
# That makes particular sense as long as we don't have official releases yet and our code is used
# by pulling from main directly.
# But now there's a risk of missing a major release and bit-rotting the dependency tree.
#
# We should either (a) configure a bot to warn us about stale dependencies, or
# (b) once we switch to a more planned release schedule (via docker or similar), just go back to
# open-pinned dependencies so that we're more likely to notice new releases (we'll still have time
# to fix any breakages since users won't immediately see the problem).
dependencies = [
    "ctakesclient >= 3, < 4",
    "delta-spark >= 2.3, < 3",
    "fhirclient < 5",
    "httpx < 1",
    "inscriptis < 3",
    "jwcrypto < 2",
    "label-studio-sdk < 1",
    "oracledb < 2",
    "pandas < 3",
    "philter-lite < 1",
    "pyarrow < 13",
    "rich < 14",
    "s3fs",
]
authors = [
  { name="Andy McMurry, PhD", email="andrew.mcmurry@childrens.harvard.edu" },
  { name="Michael Terry", email="michael.terry@childrens.harvard.edu" },
]
description = "Turns FHIR data into de-identified & aggregated records"
readme = "README.md"
license = { text="Apache License 2.0" }
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://github.com/smart-on-fhir/cumulus-etl"

[project.scripts]
cumulus-etl = "cumulus_etl.cli:main_cli"

[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[tool.flit.sdist]
include = [
    "docs/",
    "tests/",
    "LICENSE",
]
exclude = [
    "**/.pytest_cache",
]

[tool.bandit]
exclude_dirs = ["tests"]

[tool.black]
line-length = 120

[project.optional-dependencies]
tests = [
    "coverage",
    "ddt",
    "freezegun",
    "moto[s3]",
    "pytest",
    "respx",
]
dev = [
    "pre-commit",
    "black == 22.12.0"
]
